package com.jtbdevelopment.lirr.timetableprocessor

import com.jtbdevelopment.lirr.dataobjects.parsing.ProcessedPDFSchedule
import org.joda.time.DateTime
import org.joda.time.LocalDate
import org.joda.time.LocalTime
import org.junit.Test
import org.junit.runner.RunWith
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.test.context.ContextConfiguration
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner

/**
 * Date: 2/15/14
 * Time: 2:23 PM
 */
@ContextConfiguration("/spring-context-timetables.xml")
@RunWith(SpringJUnit4ClassRunner.class)
class PDFProcessorTest extends GroovyTestCase {

    @Autowired
    PDFProcessor pdfProcessor

    public static final LocalDate FEB232014 = new LocalDate(2014, 2, 23)
    public static final LocalDate DEC162013 = new LocalDate(2013, 12, 16)

    private LocalTime LT(int hour, int minute) {
        return new LocalTime(hour, minute)
    }

    @Test
    void testWestHempstead() {
        ProcessedPDFSchedule schedule = processPDF("WestHempsteadBranch2013121620140223.pdf", "West Hempstead Branch Timetable", DEC162013, FEB232014, DateTime.parse("2013-12-05T16:44:50.000Z"))
        printSchedule(schedule)
        assert ["#", "PENN STATION", "WOODSIDE", "FOREST HILLS", "KEW GARDENS", "HUNTERSPOINT AVE.", "ATLANTIC TERMINAL", "NOSTRAND AVENUE", "EAST NEW YORK", "JAMAICA", "ST. ALBANS"] as Set == schedule.eastbound1.keySet()
        assert [LT(7, 28), LT(9, 28), LT(11, 28), LT(13, 28), LT(15, 28), LT(17, 28), LT(19, 28), LT(21, 28), LT(23, 5)] == schedule.eastbound1.get("ST. ALBANS")
        assert [LT(7, 13), LT(9, 13), LT(11, 13), LT(13, 13), LT(15, 13), LT(17, 13), LT(19, 13), LT(21, 13), LT(22, 51)] == schedule.eastbound1.get("FOREST HILLS")

        assert ["#", "PENN STATION", "WOODSIDE", "FOREST HILLS", "KEW GARDENS", "HUNTERSPOINT AVE.", "ATLANTIC TERMINAL", "NOSTRAND AVENUE", "EAST NEW YORK", "JAMAICA", "ST. ALBANS", "VALLEY STREAM", "WESTWOOD", "MALVERNE", "LAKEVIEW", "HEMPSTEAD GARDENS", "WEST HEMPSTEAD"] as Set == schedule.eastbound2.keySet()
        assert [LT(1, 1), LT(6, 29), null, LT(9, 12), null, null, LT(10, 52), null, null, LT(12, 52), null, null, LT(14, 51), LT(15, 40), null, null, LT(16, 57), null, null, LT(17, 44), null, LT(18, 13), null, LT(18, 58), null, null, LT(19, 37), null, LT(20, 1), null, LT(21, 11), null, LT(22, 0), null, LT(23, 16), null] == schedule.eastbound2.get("MALVERNE")
        assert [LT(0, 55), LT(6, 23), null, LT(9, 6), null, null, LT(10, 46), null, null, LT(12, 46), null, null, LT(14, 45), LT(15, 34), null, null, null, null, null, LT(17, 38), null, null, null, null, null, null, null, null, null, null, LT(21, 5), null, LT(21, 54), null, LT(23, 11), null] == schedule.eastbound2.get("VALLEY STREAM")

        assert ["#", "ST. ALBANS", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound1.keySet()
        assert [LT(7, 44), LT(9, 44), LT(11, 44), LT(13, 44), LT(15, 44), LT(17, 44), LT(19, 44), LT(21, 44), LT(23, 44)] == schedule.westbound1.get("ST. ALBANS")
        assert [LT(8, 12), LT(10, 12), LT(12, 12), LT(14, 12), LT(16, 12), LT(18, 12), LT(20, 12), LT(22, 12), LT(0, 12)] == schedule.westbound1.get("PENN STATION")

        assert ["#", "WEST HEMPSTEAD", "HEMPSTEAD GARDENS", "LAKEVIEW", "MALVERNE", "WESTWOOD", "VALLEY STREAM", "ST. ALBANS", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound2.keySet()
        assert [LT(5, 37), null, LT(6, 53), LT(7, 16), LT(7, 36), LT(8, 28), null, null, LT(10, 12), null, null, LT(12, 12), null, null, LT(14, 12), null, LT(16, 4), null, null, LT(18, 30), null, null, LT(20, 21), LT(22, 37), null, LT(23, 46)] == schedule.westbound2.get("WEST HEMPSTEAD")
        assert [LT(5, 39), null, LT(6, 55), LT(7, 18), LT(7, 38), LT(8, 30), null, null, LT(10, 14), null, null, LT(12, 14), null, null, LT(14, 14), null, LT(16, 6), null, null, LT(18, 32), null, null, LT(20, 23), LT(22, 39), null, LT(23, 48)] == schedule.westbound2.get("HEMPSTEAD GARDENS")
        assert [LT(5, 55), null, null, null, null, null, null, null, LT(10, 31), null, null, LT(12, 31), null, null, LT(14, 31), null, null, null, null, null, null, null, null, LT(22, 56), null, null] == schedule.westbound2.get("VALLEY STREAM")
    }

    @Test
    void testLongBeach() {
        ProcessedPDFSchedule schedule = processPDF("LongBeachBranch2013121620140223.pdf", "Long Beach Branch Timetable", DEC162013, FEB232014, DateTime.parse("2013-12-05T16:43:45.000Z"))
        printSchedule(schedule)
        assert ["#", "PENN STATION", "WOODSIDE", "FOREST HILLS", "KEW GARDENS", "HUNTERSPOINT AVE.", "ATLANTIC TERMINAL", "NOSTRAND AVENUE", "EAST NEW YORK", "JAMAICA", "VALLEY STREAM", "LYNBROOK", "CENTRE AVENUE", "EAST ROCKAWAY", "OCEANSIDE", "ISLAND PARK", "LONG BEACH"] as Set == schedule.eastbound1.keySet()
        assert [LT(0, 57), LT(1, 25), LT(1, 25), null, LT(2, 58), LT(2, 58), LT(2, 58), null, LT(4, 24), null, LT(6, 43), LT(6, 43), LT(7, 33), LT(7, 33), LT(8, 43), LT(8, 43), LT(9, 43), LT(9, 43), LT(10, 43), LT(10, 43), LT(11, 43), LT(11, 43), LT(12, 43), LT(12, 43), LT(13, 43), LT(13, 43), LT(14, 43), LT(14, 43), LT(15, 33), LT(15, 33), LT(16, 33), null, LT(16, 33), null, LT(17, 43), LT(17, 43), null, LT(18, 43), LT(18, 43), null, LT(19, 43), LT(19, 43), LT(20, 33), LT(20, 33), LT(21, 43), LT(21, 43), LT(22, 33), LT(22, 53), LT(23, 15), LT(23, 46)] == schedule.eastbound1.get("KEW GARDENS")
        assert [LT(1, 17), LT(1, 57), LT(2, 20), LT(2, 47), LT(3, 22), LT(3, 32), LT(3, 34), LT(4, 4), LT(4, 45), LT(5, 30), LT(7, 3), LT(7, 25), LT(7, 54), LT(8, 25), LT(9, 3), LT(9, 25), LT(10, 3), LT(10, 25), LT(11, 3), LT(11, 25), LT(12, 3), LT(12, 25), LT(13, 3), LT(13, 25), LT(14, 3), LT(14, 25), LT(15, 3), LT(15, 25), LT(15, 54), LT(16, 25), LT(16, 54), LT(17, 1), LT(17, 25), LT(17, 52), LT(18, 3), LT(18, 25), LT(18, 52), LT(19, 3), LT(19, 25), LT(19, 52), LT(20, 3), LT(20, 25), LT(20, 54), LT(21, 25), LT(22, 3), LT(22, 25), LT(22, 54), LT(23, 25), LT(23, 36), LT(0, 35)] == schedule.eastbound1.get("LYNBROOK")
        assert [null, LT(1, 54), LT(2, 17), null, LT(3, 19), LT(3, 29), null, null, LT(4, 41), null, null, LT(7, 22), null, LT(8, 22), null, LT(9, 22), null, LT(10, 22), null, LT(11, 22), null, LT(12, 22), null, LT(13, 22), null, LT(14, 22), null, LT(15, 22), null, LT(16, 22), null, LT(16, 58), LT(17, 22), LT(17, 49), null, LT(18, 22), LT(18, 49), null, LT(19, 22), LT(19, 49), null, LT(20, 22), null, LT(21, 22), null, LT(22, 22), null, LT(23, 22), null, LT(0, 32)] == schedule.eastbound1.get("VALLEY STREAM")

        assert ["#", "PENN STATION", "WOODSIDE", "FOREST HILLS", "KEW GARDENS", "HUNTERSPOINT AVE.", "ATLANTIC TERMINAL", "NOSTRAND AVENUE", "EAST NEW YORK", "JAMAICA", "VALLEY STREAM", "LYNBROOK", "CENTRE AVENUE", "EAST ROCKAWAY", "OCEANSIDE", "ISLAND PARK", "LONG BEACH"] as Set == schedule.eastbound2.keySet()
        assert [null, LT(1, 34), null, LT(3, 45), null, LT(6, 12), null, LT(7, 29), null, LT(8, 15), LT(8, 49), LT(9, 29), null, LT(10, 21), null, LT(11, 21), null, LT(12, 21), null, LT(13, 21), null, LT(14, 21), null, null, null, LT(15, 41), LT(16, 7), null, LT(16, 36), LT(17, 1), null, LT(17, 30), LT(17, 48), LT(18, 3), LT(18, 11), LT(18, 25), null, LT(18, 42), LT(19, 3), LT(19, 32), null, LT(19, 55), LT(20, 19), null, LT(20, 56), LT(21, 15), null, LT(21, 43), null, LT(22, 39), null, LT(23, 39), null, LT(0, 45)] == schedule.eastbound2.get("ISLAND PARK")
        assert [LT(1, 17), LT(1, 24), LT(2, 13), LT(3, 35), LT(5, 29), LT(6, 2), LT(7, 14), LT(7, 19), LT(8, 5), LT(8, 5), LT(8, 39), LT(9, 19), LT(9, 41), LT(10, 11), LT(10, 41), LT(11, 11), LT(11, 41), LT(12, 11), LT(12, 41), LT(13, 11), LT(13, 41), LT(14, 11), LT(14, 41), LT(15, 6), LT(15, 12), LT(15, 31), LT(15, 57), LT(16, 9), LT(16, 26), LT(16, 51), LT(17, 14), LT(17, 19), LT(17, 36), LT(17, 52), LT(18, 1), LT(18, 14), LT(18, 41), LT(18, 29), LT(18, 52), LT(19, 20), LT(19, 22), LT(19, 44), LT(20, 9), LT(20, 16), LT(20, 46), LT(21, 5), LT(21, 15), LT(21, 33), LT(21, 46), LT(22, 29), LT(22, 46), LT(23, 29), LT(0, 16), LT(0, 35)] == schedule.eastbound2.get("LYNBROOK")
        assert [null, LT(1, 40), null, LT(3, 51), null, LT(6, 22), null, LT(7, 36), null, LT(8, 22), LT(8, 55), LT(9, 36), null, LT(10, 28), null, LT(11, 28), null, LT(12, 28), null, LT(13, 28), null, LT(14, 28), null, null, null, LT(15, 48), LT(16, 15), null, LT(16, 44), LT(17, 8), null, LT(17, 37), LT(17, 55), LT(18, 11), LT(18, 18), LT(18, 32), null, LT(18, 49), LT(19, 10), LT(19, 38), null, LT(20, 2), LT(20, 26), null, LT(21, 3), LT(21, 22), null, LT(21, 50), null, LT(22, 46), null, LT(23, 46), null, LT(0, 52)] == schedule.eastbound2.get("LONG BEACH")

        assert ["#", "LONG BEACH", "ISLAND PARK", "OCEANSIDE", "EAST ROCKAWAY", "CENTRE AVENUE", "LYNBROOK", "VALLEY STREAM", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound1.keySet()
        assert [LT(1, 23), LT(2, 26), LT(4, 33), LT(5, 35), LT(6, 19), LT(7, 26), LT(7, 26), LT(8, 26), LT(8, 26), LT(9, 26), LT(9, 26), null, LT(10, 26), LT(10, 26), null, LT(11, 26), LT(11, 26), null, LT(12, 26), LT(12, 26), null, LT(13, 26), LT(13, 26), LT(14, 26), LT(14, 26), LT(15, 26), LT(15, 26), LT(16, 26), LT(16, 26), LT(17, 26), LT(17, 26), LT(18, 26), LT(18, 26), LT(19, 26), LT(19, 26), LT(20, 26), LT(20, 26), LT(21, 26), LT(21, 26), LT(22, 26), LT(22, 26), LT(23, 26), LT(23, 26), LT(0, 26)] == schedule.westbound1.get("KEW GARDENS")
        assert [LT(0, 45), LT(1, 32), LT(4, 10), LT(4, 48), LT(5, 23), LT(6, 32), LT(7, 6), LT(7, 42), LT(8, 6), LT(8, 42), LT(9, 6), LT(9, 13), LT(9, 42), LT(10, 6), LT(10, 13), LT(10, 42), LT(11, 6), LT(11, 13), LT(11, 42), LT(12, 6), LT(12, 13), LT(12, 42), LT(13, 6), LT(13, 42), LT(14, 6), LT(14, 42), LT(15, 6), LT(15, 42), LT(16, 6), LT(16, 42), LT(17, 6), LT(17, 42), LT(18, 6), LT(18, 42), LT(19, 6), LT(19, 42), LT(20, 6), LT(20, 42), LT(21, 6), LT(21, 42), LT(22, 6), LT(22, 42), LT(23, 6), LT(23, 39)] == schedule.westbound1.get("LYNBROOK")
        assert [LT(0, 28), null, LT(3, 53), null, LT(5, 6), LT(6, 15), null, LT(7, 25), null, LT(8, 25), null, LT(8, 56), LT(9, 25), null, LT(9, 56), LT(10, 25), null, LT(10, 56), LT(11, 25), null, LT(11, 56), LT(12, 25), null, LT(13, 25), null, LT(14, 25), null, LT(15, 25), null, LT(16, 25), null, LT(17, 25), null, LT(18, 25), null, LT(19, 25), null, LT(20, 25), null, LT(21, 25), null, LT(22, 25), null, LT(23, 22)] == schedule.westbound1.get("LONG BEACH")

        assert ["#", "LONG BEACH", "ISLAND PARK", "OCEANSIDE", "EAST ROCKAWAY", "CENTRE AVENUE", "LYNBROOK", "VALLEY STREAM", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound2.keySet()
        assert [LT(0, 40), null, null, LT(3, 25), null, null, null, LT(5, 47), null, LT(6, 22), null, LT(6, 49), null, LT(7, 6), LT(7, 16), LT(7, 35), LT(7, 51), LT(8, 8), LT(8, 15), LT(8, 20), null, LT(8, 50), LT(9, 10), LT(9, 33), LT(10, 23), null, LT(11, 23), null, LT(12, 23), null, LT(13, 23), null, LT(14, 23), null, LT(15, 23), null, LT(16, 15), null, LT(16, 42), LT(17, 26), LT(17, 55), null, LT(18, 50), LT(19, 9), null, null, LT(20, 1), null, LT(20, 31), null, LT(21, 0), null, LT(22, 5), null, LT(23, 9), null] == schedule.westbound2.get("EAST ROCKAWAY")
        assert [LT(1, 0), LT(1, 49), LT(2, 32), LT(3, 58), LT(4, 31), LT(5, 33), LT(5, 50), LT(6, 11), LT(6, 13), LT(6, 47), LT(7, 4), LT(7, 9), LT(7, 10), LT(7, 31), null, null, LT(8, 12), LT(8, 33), null, LT(8, 41), LT(9, 10), LT(9, 10), LT(9, 33), LT(9, 53), LT(10, 43), LT(11, 3), LT(11, 43), LT(12, 3), LT(12, 43), LT(13, 3), LT(13, 43), LT(14, 3), LT(14, 43), LT(15, 3), LT(15, 43), LT(16, 3), LT(16, 39), LT(17, 2), LT(17, 2), LT(17, 46), LT(18, 17), LT(18, 32), LT(19, 15), LT(19, 29), LT(19, 33), LT(20, 3), LT(20, 21), LT(20, 33), LT(20, 55), LT(21, 6), LT(21, 22), LT(22, 6), LT(22, 25), LT(23, 7), LT(23, 30), LT(0, 6)] == schedule.westbound2.get("JAMAICA")
        assert [null, null, null, null, null, null, LT(6, 37), LT(6, 37), LT(6, 37), LT(7, 26), LT(7, 26), LT(7, 26), LT(7, 41), LT(7, 49), null, null, LT(8, 36), LT(8, 55), null, LT(9, 11), LT(9, 28), LT(9, 28), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null] == schedule.westbound2.get("HUNTERSPOINT AVE.")
    }

    //@Test
    void testHempstead() {
        ProcessedPDFSchedule schedule = processPDF("HempsteadBranch2013121620140223.pdf", "Hempstead Branch Timetable", DEC162013, FEB232014, DateTime.parse("2013-12-05T16:43:36.000Z"))
        printSchedule(schedule)
        assert ["#", "PENN STATION", "WOODSIDE", "FOREST HILLS", "KEW GARDENS", "HUNTERSPOINT AVE.", "ATLANTIC TERMINAL", "NOSTRAND AVENUE", "EAST NEW YORK", "JAMAICA", "HOLLIS", "QUEENS VILLAGE", "BELLEROSE", "FLORAL PARK", "STEWART MANOR", "NASSAU BOULEVARD", "GARDEN CITY", "COUNTRY LIFE PRESS", "HEMPSTEAD"] as Set == schedule.eastbound2.keySet()
        assert [LT(1, 18), LT(2, 18), LT(4, 44), LT(5, 32), LT(7, 21), LT(8, 21), LT(9, 21), LT(10, 21), LT(11, 21), LT(12, 21), LT(13, 21), LT(14, 21), LT(15, 21), LT(16, 21), LT(17, 21), LT(18, 21), LT(19, 21), LT(20, 21), LT(21, 21), LT(22, 21), LT(23, 26), LT(0, 33)] == schedule.eastbound2.get("FLORAL PARK")
        assert [LT(1, 34), LT(2, 34), LT(5, 0), LT(5, 48), LT(7, 37), LT(8, 37), LT(9, 37), LT(10, 37), LT(11, 37), LT(12, 37), LT(13, 37), LT(14, 37), LT(15, 37), LT(16, 37), LT(17, 37), LT(18, 37), LT(19, 37), LT(20, 37), LT(21, 37), LT(22, 37), LT(23, 44), LT(0, 49)] == schedule.eastbound2.get("HEMPSTEAD")

        assert ["#", "HEMPSTEAD", "COUNTRY LIFE PRESS", "GARDEN CITY", "NASSAU BOULEVARD", "STEWART MANOR", "FLORAL PARK", "BELLEROSE", "QUEENS VILLAGE", "HOLLIS", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.eastbound1.keySet()
        assert [LT(1, 4), LT(2, 0), LT(3, 22), LT(5, 16), LT(5, 48), LT(6, 12), LT(7, 6), LT(7, 21), LT(8, 9), LT(8, 25), LT(8, 58), LT(9, 58), LT(10, 58), LT(11, 58), LT(12, 58), LT(13, 58), LT(14, 58), LT(15, 55), LT(16, 54), LT(17, 28), LT(17, 39), LT(18, 5), LT(18, 15), LT(18, 32), LT(19, 3), LT(19, 27), LT(19, 56), LT(20, 51), LT(22, 5), LT(22, 58), LT(0, 18)] == schedule.eastbound1.get("JAMAICA")
        assert [LT(1, 27), LT(2, 22), LT(3, 44), null, LT(6, 9), null, LT(7, 27), LT(7, 43), LT(8, 31), null, LT(9, 21), LT(10, 21), LT(11, 21), LT(12, 21), LT(13, 21), LT(14, 21), LT(15, 21), LT(16, 18), LT(17, 15), LT(17, 49), LT(18, 1), LT(18, 27), LT(18, 37), LT(18, 55), LT(19, 25), LT(19, 49), LT(20, 19), LT(21, 14), LT(22, 28), LT(23, 23), LT(0, 42)] == schedule.eastbound1.get("GARDEN CITY")
        assert [LT(1, 18), LT(2, 13), LT(3, 35), LT(5, 26), LT(6, 0), LT(6, 21), LT(7, 18), LT(7, 34), LT(8, 22), LT(8, 34), LT(9, 12), LT(10, 12), LT(11, 12), LT(12, 12), LT(13, 12), LT(14, 12), LT(15, 12), LT(16, 9), LT(17, 6), LT(17, 40), LT(17, 52), LT(18, 18), LT(18, 28), LT(18, 46), LT(19, 16), LT(19, 40), LT(20, 10), LT(21, 5), LT(22, 19), LT(23, 15), LT(0, 33)] == schedule.eastbound1.get("FLORAL PARK")

        assert ["#", "HEMPSTEAD", "COUNTRY LIFE PRESS", "GARDEN CITY", "NASSAU BOULEVARD", "STEWART MANOR", "FLORAL PARK", "BELLEROSE", "QUEENS VILLAGE", "HOLLIS", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound2.keySet()
        assert [LT(1, 7), LT(2, 9), LT(2, 45), LT(5, 23), LT(7, 9), LT(8, 9), LT(9, 9), LT(10, 9), LT(11, 9), LT(12, 9), LT(13, 9), LT(14, 9), LT(15, 9), LT(16, 9), LT(17, 9), LT(18, 9), LT(19, 9), LT(20, 9), LT(21, 9), LT(22, 9), LT(23, 14), LT(0, 18)] == schedule.westbound2.get("PENN STATION")
        assert [LT(0, 14), LT(1, 21), LT(1, 52), LT(4, 33), LT(6, 17), LT(7, 17), LT(8, 17), LT(9, 17), LT(10, 17), LT(11, 17), LT(12, 17), LT(13, 17), LT(14, 17), LT(15, 17), LT(16, 17), LT(17, 17), LT(18, 17), LT(19, 17), LT(20, 17), LT(21, 17), LT(22, 23), LT(23, 28)] == schedule.westbound2.get("COUNTRY LIFE PRESS")

        assert ["#", "HEMPSTEAD", "COUNTRY LIFE PRESS", "GARDEN CITY", "NASSAU BOULEVARD", "STEWART MANOR", "FLORAL PARK", "BELLEROSE", "QUEENS VILLAGE", "HOLLIS", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound1.keySet()
        assert [LT(0, 11), LT(1, 19), LT(1, 59), LT(4, 0), LT(5, 1), LT(5, 58), LT(6, 21), LT(6, 38), LT(6, 58), LT(7, 12), null, LT(7, 36), LT(8, 3), LT(8, 20), LT(8, 45), LT(9, 4), LT(10, 11), LT(11, 11), LT(12, 11), LT(13, 11), LT(14, 11), LT(15, 11), LT(16, 4), LT(16, 53), LT(17, 41), LT(18, 20), LT(19, 9), LT(19, 31), LT(20, 1), LT(21, 1), LT(22, 1), LT(23, 9)] == schedule.westbound1.get("HEMPSTEAD")
        assert [LT(0, 34), LT(1, 42), LT(2, 23), LT(4, 23), LT(5, 24), LT(6, 20), LT(6, 43), LT(7, 1), LT(7, 22), null, LT(7, 44), LT(8, 0), null, LT(8, 43), LT(9, 8), LT(9, 27), LT(10, 34), LT(11, 34), LT(12, 34), LT(13, 34), LT(14, 34), LT(15, 34), LT(16, 27), LT(17, 16), null, LT(18, 43), LT(19, 32), LT(19, 56), LT(20, 24), LT(21, 24), LT(22, 24), LT(23, 32)] == schedule.westbound1.get("HOLLIS")
        assert ["701", "703", "705", "707", "709", "711", "799", "713", "715", "717", "1501", "721", "723", "725", "727", "729", "731", "733", "751", "753", "755", "757", "759", "761", "763", "765", "767", "3753", "771", "773", "775", "777"] == schedule.westbound1.get("#")
    }

    @Test
    void testFarRockaway() {
        ProcessedPDFSchedule schedule = processPDF("FarRockawayBranch2013121620140223.pdf", "Far Rockaway Branch Timetable", DEC162013, FEB232014, DateTime.parse("2013-12-05T16:43:13.000Z"))
        printSchedule(schedule)
        assert ["#", "PENN STATION", "WOODSIDE", "FOREST HILLS", "KEW GARDENS", "HUNTERSPOINT AVE.", "ATLANTIC TERMINAL", "NOSTRAND AVENUE", "EAST NEW YORK", "JAMAICA", "LOCUST MANOR", "LAURELTON", "ROSEDALE", "VALLEY STREAM", "GIBSON", "HEWLETT", "WOODMERE", "CEDARHURST", "LAWRENCE", "INWOOD", "FAR ROCKAWAY"] as Set == schedule.eastbound1.keySet()
        assert [LT(0, 52), LT(1, 54), LT(2, 22), LT(3, 19), LT(3, 32), LT(4, 41), LT(4, 51), LT(6, 55), LT(7, 22), LT(7, 55), LT(8, 22), LT(8, 55), LT(9, 22), LT(9, 55), LT(10, 22), LT(10, 55), LT(11, 22), LT(11, 55), LT(12, 22), LT(12, 55), LT(13, 22), LT(13, 55), LT(14, 22), LT(14, 55), LT(15, 22), LT(15, 55), LT(16, 22), LT(16, 55), null, LT(17, 22), null, LT(17, 55), LT(18, 22), null, LT(18, 55), LT(19, 22), null, LT(19, 55), LT(20, 22), LT(20, 55), LT(21, 22), LT(21, 55), LT(22, 22), LT(22, 55), LT(23, 22), LT(0, 3), LT(0, 32)] == schedule.eastbound1.get("VALLEY STREAM")

        assert [LT(1, 1), null, LT(2, 30), null, LT(3, 40), null, LT(5, 0), LT(7, 3), null, LT(8, 3), null, LT(9, 3), null, LT(10, 3), null, LT(11, 3), null, LT(12, 3), null, LT(13, 3), null, LT(14, 3), null, LT(15, 3), null, LT(16, 3), null, LT(17, 3), null, null, null, LT(18, 3), null, null, LT(19, 3), null, null, LT(20, 3), null, LT(21, 3), null, LT(22, 3), null, LT(23, 3), null, LT(0, 11), null] == schedule.eastbound1.get("WOODMERE")
        assert ["8800", "6802", "8802", "6890", "8804", "6806", "8806", "8808", "6808", "8810", "6810", "8812", "6812", "8814", "6814", "8816", "6818", "8818", "6820", "8850", "6850", "8852", "6852", "8854", "6854", "8856", "6856", "8858", "6892", "6858", "6894", "8860", "6860", "6896", "8862", "6862", "6898", "8864", "6864", "8866", "6866", "8868", "6868", "8870", "6870", "8872", "6872"] == schedule.eastbound1.get("#")

        assert ["#", "PENN STATION", "WOODSIDE", "FOREST HILLS", "KEW GARDENS", "HUNTERSPOINT AVE.", "ATLANTIC TERMINAL", "NOSTRAND AVENUE", "EAST NEW YORK", "JAMAICA", "LOCUST MANOR", "LAURELTON", "ROSEDALE", "VALLEY STREAM", "GIBSON", "HEWLETT", "WOODMERE", "CEDARHURST", "LAWRENCE", "INWOOD", "FAR ROCKAWAY"] as Set == schedule.eastbound2.keySet()
        assert [LT(1, 9), null, LT(2, 13), null, null, LT(4, 10), LT(6, 4), null, null, LT(7, 29), null, null, LT(8, 32), null, LT(9, 8), null, null, LT(9, 58), null, LT(10, 58), null, LT(11, 58), null, LT(12, 58), null, LT(13, 58), null, LT(14, 58), LT(15, 41), null, LT(15, 58), null, LT(16, 39), null, LT(16, 48), null, LT(17, 22), null, LT(17, 35), null, null, LT(18, 3), null, LT(18, 19), null, LT(18, 41), LT(18, 53), null, LT(19, 20), null, LT(19, 46), null, null, LT(20, 48), null, null, LT(21, 39), null, LT(22, 5), null, LT(23, 2), null, null, LT(0, 2), null] == schedule.eastbound2.get("INWOOD")
        assert [LT(1, 14), null, LT(2, 18), null, null, LT(4, 15), LT(6, 9), null, null, LT(7, 34), null, null, LT(8, 37), null, LT(9, 12), null, null, LT(10, 2), null, LT(11, 2), null, LT(12, 2), null, LT(13, 2), null, LT(14, 2), null, LT(15, 2), LT(15, 46), null, LT(16, 2), null, LT(16, 43), null, LT(16, 53), null, LT(17, 26), null, LT(17, 40), null, null, LT(18, 8), null, LT(18, 24), null, LT(18, 46), LT(18, 58), null, LT(19, 25), null, LT(19, 51), null, null, LT(20, 53), null, null, LT(21, 43), null, LT(22, 10), null, LT(23, 7), null, null, LT(0, 7), null] == schedule.eastbound2.get("FAR ROCKAWAY")

        assert ["#", "FAR ROCKAWAY", "INWOOD", "LAWRENCE", "CEDARHURST", "WOODMERE", "HEWLETT", "GIBSON", "VALLEY STREAM", "ROSEDALE", "LAURELTON", "LOCUST MANOR", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound1.keySet()
        assert [null, LT(0, 48), LT(1, 44), null, LT(5, 6), null, LT(5, 50), null, LT(6, 57), null, LT(7, 57), null, LT(8, 57), null, null, LT(9, 57), null, null, LT(10, 57), null, null, LT(11, 57), null, null, LT(12, 57), null, LT(13, 57), null, LT(14, 57), null, LT(15, 57), null, LT(16, 57), null, LT(17, 57), null, LT(18, 57), null, LT(19, 57), null, LT(20, 57), null, LT(21, 57), null, LT(22, 54), null, LT(23, 51)] == schedule.westbound1.get("LAWRENCE")
        assert [null, LT(0, 56), LT(1, 52), null, LT(5, 13), null, LT(5, 57), null, LT(7, 4), null, LT(8, 4), null, LT(9, 4), null, null, LT(10, 4), null, null, LT(11, 4), null, null, LT(12, 4), null, null, LT(13, 4), null, LT(14, 4), null, LT(15, 4), null, LT(16, 4), null, LT(17, 4), null, LT(18, 4), null, LT(19, 4), null, LT(20, 4), null, LT(21, 4), null, LT(22, 4), null, LT(23, 1), null, LT(23, 58)] == schedule.westbound1.get("HEWLETT")

        assert ["#", "FAR ROCKAWAY", "INWOOD", "LAWRENCE", "CEDARHURST", "WOODMERE", "HEWLETT", "GIBSON", "VALLEY STREAM", "ROSEDALE", "LAURELTON", "LOCUST MANOR", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound2.keySet()
        assert [LT(1, 25), LT(1, 25), LT(2, 27), null, LT(5, 39), LT(6, 19), LT(6, 19), LT(6, 40), LT(7, 16), LT(7, 16), LT(7, 37), LT(7, 37), LT(7, 37), null, LT(8, 12), LT(8, 12), null, LT(8, 25), LT(8, 49), LT(8, 49), LT(8, 49), LT(8, 49), LT(9, 16), LT(9, 16), LT(9, 50), LT(9, 50), null, LT(10, 57), LT(10, 57), LT(11, 57), LT(11, 57), LT(12, 57), LT(12, 57), LT(13, 57), LT(13, 57), LT(14, 57), LT(14, 57), LT(15, 55), LT(15, 55), LT(16, 41), LT(17, 22), LT(17, 22), LT(18, 3), LT(18, 32), LT(18, 32), LT(18, 32), LT(19, 19), LT(19, 19), LT(20, 10), LT(20, 10), LT(20, 10), LT(20, 39), LT(21, 12), LT(21, 12), LT(21, 39), LT(22, 18), LT(22, 39), LT(23, 39), LT(23, 39), LT(0, 50)] == schedule.westbound2.get("FOREST HILLS")
        assert [null, LT(1, 9), LT(2, 11), LT(3, 48), null, LT(5, 49), LT(6, 1), null, LT(6, 36), null, null, LT(7, 7), LT(7, 21), null, LT(7, 35), null, LT(7, 51), LT(8, 9), null, LT(8, 22), null, null, LT(8, 48), null, null, LT(9, 24), null, LT(10, 1), null, LT(11, 2), null, LT(12, 2), null, LT(13, 2), null, LT(14, 2), null, LT(15, 2), null, LT(16, 3), null, LT(17, 4), null, LT(17, 55), null, null, null, LT(19, 4), null, null, LT(19, 52), null, null, LT(20, 51), null, LT(21, 55), null, LT(23, 1), null, LT(0, 5)] == schedule.westbound2.get("LAURELTON")
    }

    @Test
    void testBabylon() {
        ProcessedPDFSchedule schedule = processPDF("BabylonBranch2013121620140223.pdf", "Babylon Branch Timetable", DEC162013, FEB232014, DateTime.parse("2013-12-05T16:42:51.000Z"))
        printSchedule(schedule)
        assert ["#", "PENN STATION", "WOODSIDE", "FOREST HILLS", "KEW GARDENS", "HUNTERSPOINT AVE.", "ATLANTIC TERMINAL", "NOSTRAND AVENUE", "EAST NEW YORK", "JAMAICA", "LYNBROOK", "ROCKVILLE CENTRE", "BALDWIN", "FREEPORT", "MERRICK", "BELLMORE", "WANTAGH", "SEAFORD", "MASSAPEQUA", "MASSAPEQUA PARK", "AMITYVILLE", "COPIAGUE", "LINDENHURST", "BABYLON"] as Set == schedule.eastbound1.keySet()
        assert [LT(0, 20), LT(0, 57), LT(0, 57), null, LT(1, 25), LT(1, 25), null, LT(2, 58), LT(2, 58), null, null, LT(6, 43), LT(7, 15), LT(7, 33), LT(7, 33), LT(8, 15), LT(8, 43), LT(9, 15), LT(9, 15), LT(9, 43), LT(9, 43), LT(10, 15), LT(10, 43), LT(11, 15), LT(11, 43), LT(11, 43), LT(12, 15), LT(12, 43), LT(13, 15), LT(13, 43), LT(14, 15), LT(14, 43), LT(14, 43), LT(15, 15), LT(15, 33), LT(15, 33), LT(16, 15), LT(16, 33), LT(16, 33), LT(17, 15), LT(17, 15), LT(17, 43), LT(17, 43), LT(18, 15), LT(18, 15), LT(18, 43), LT(18, 43), LT(19, 15), LT(19, 15), LT(19, 43), LT(20, 15), LT(20, 33), LT(21, 15), LT(21, 15), LT(21, 43), LT(22, 15), LT(22, 33), LT(22, 53), LT(23, 15), LT(23, 15), LT(23, 46)] == schedule.eastbound1.get("KEW GARDENS")
        assert [LT(0, 47), LT(1, 26), null, LT(1, 57), LT(2, 10), LT(2, 29), LT(2, 56), LT(3, 26), LT(3, 43), LT(4, 13), LT(5, 39), LT(7, 12), LT(7, 44), LT(8, 0), null, LT(8, 43), LT(9, 12), LT(9, 44), null, LT(10, 12), null, LT(10, 44), LT(11, 12), LT(11, 44), LT(12, 12), null, LT(12, 44), LT(13, 12), LT(13, 44), LT(14, 12), LT(14, 44), LT(15, 12), null, LT(15, 44), LT(16, 0), LT(16, 23), LT(16, 44), LT(17, 0), LT(17, 23), LT(17, 44), null, LT(18, 12), LT(18, 23), LT(18, 44), LT(18, 51), LT(19, 12), LT(19, 23), LT(19, 44), null, LT(20, 12), LT(20, 44), LT(21, 0), LT(21, 44), null, LT(22, 12), LT(22, 44), LT(23, 0), LT(23, 21), LT(23, 44), null, LT(0, 15)] == schedule.eastbound1.get("FREEPORT")

        assert ["#", "PENN STATION", "WOODSIDE", "FOREST HILLS", "KEW GARDENS", "HUNTERSPOINT AVE.", "ATLANTIC TERMINAL", "NOSTRAND AVENUE", "EAST NEW YORK", "JAMAICA", "LYNBROOK", "ROCKVILLE CENTRE", "BALDWIN", "FREEPORT", "MERRICK", "BELLMORE", "WANTAGH", "SEAFORD", "MASSAPEQUA", "MASSAPEQUA PARK", "AMITYVILLE", "COPIAGUE", "LINDENHURST", "BABYLON"] as Set == schedule.eastbound2.keySet()
        assert [LT(1, 1), LT(1, 40), null, LT(2, 36), LT(4, 4), LT(5, 52), LT(7, 35), null, LT(8, 28), null, LT(9, 4), null, LT(9, 34), LT(10, 4), null, LT(10, 39), LT(11, 4), null, LT(11, 39), LT(12, 4), null, null, LT(12, 39), LT(13, 4), LT(13, 39), LT(14, 4), null, LT(14, 24), LT(14, 39), LT(14, 48), LT(15, 4), LT(15, 17), LT(15, 28), LT(15, 34), null, LT(15, 56), LT(16, 3), null, LT(16, 23), null, LT(16, 37), null, LT(17, 8), LT(17, 12), LT(17, 22), LT(17, 36), null, LT(17, 38), LT(17, 53), null, null, LT(18, 1), null, LT(18, 20), null, LT(18, 24), LT(18, 40), null, null, LT(19, 4), LT(18, 45), null, LT(18, 56), null, null, LT(19, 19), null, LT(19, 45), LT(20, 4), LT(20, 16), LT(20, 39), LT(21, 7), null, LT(21, 38), LT(22, 9), null, LT(22, 40), LT(23, 9), null, LT(23, 40), LT(0, 9), null, LT(0, 40)] == schedule.eastbound2.get("MASSAPEQUA")
        assert [LT(1, 17), LT(1, 56), LT(1, 46), LT(2, 52), LT(4, 20), LT(6, 8), LT(7, 51), LT(8, 8), LT(8, 44), LT(8, 47), LT(9, 20), LT(9, 26), LT(9, 50), LT(10, 21), LT(10, 24), LT(10, 57), LT(11, 21), LT(11, 24), LT(11, 57), LT(12, 21), LT(12, 10), LT(12, 24), LT(12, 57), LT(13, 21), LT(13, 57), LT(14, 21), LT(14, 24), LT(14, 40), LT(14, 57), LT(15, 4), LT(15, 21), LT(15, 33), LT(15, 45), LT(15, 51), LT(15, 40), LT(16, 12), LT(16, 15), LT(16, 24), LT(16, 39), null, LT(16, 53), LT(17, 5), null, LT(17, 28), LT(17, 39), LT(17, 52), LT(17, 44), LT(17, 55), LT(18, 10), null, LT(18, 13), LT(18, 19), null, LT(18, 36), null, LT(18, 40), LT(18, 56), null, null, LT(19, 20), LT(19, 1), null, LT(19, 12), null, LT(19, 22), LT(19, 35), null, LT(20, 1), LT(20, 20), LT(20, 32), LT(20, 55), LT(21, 23), LT(21, 26), LT(21, 54), LT(22, 25), LT(22, 32), LT(22, 56), LT(23, 25), LT(23, 32), LT(23, 56), LT(0, 25), LT(0, 34), LT(0, 56)] == schedule.eastbound2.get("BABYLON")
        assert [LT(0, 8), LT(0, 52), LT(0, 52), LT(1, 49), null, null, LT(6, 48), LT(6, 48), LT(7, 40), LT(7, 40), LT(8, 15), LT(8, 41), LT(8, 47), LT(9, 17), LT(9, 17), LT(9, 47), LT(10, 17), LT(10, 17), LT(10, 47), LT(11, 17), LT(11, 17), LT(11, 17), LT(11, 47), LT(12, 17), LT(12, 47), LT(13, 17), LT(13, 17), null, LT(13, 47), LT(13, 47), LT(14, 17), null, null, LT(14, 47), LT(14, 47), LT(14, 47), LT(15, 17), LT(15, 34), null, LT(15, 43), LT(15, 43), LT(16, 7), null, LT(16, 27), null, LT(16, 44), LT(16, 44), null, LT(16, 44), null, LT(17, 22), LT(17, 22), null, LT(17, 34), LT(17, 34), null, LT(17, 50), null, null, LT(18, 15), null, null, null, null, LT(18, 38), LT(18, 38), LT(18, 38), LT(18, 53), LT(19, 17), LT(19, 34), LT(19, 47), LT(20, 23), LT(20, 42), LT(20, 42), LT(21, 12), LT(21, 24), LT(21, 24), LT(22, 23), LT(22, 47), LT(22, 47), LT(23, 21), LT(23, 21), LT(23, 21)] == schedule.eastbound2.get("EAST NEW YORK")

        assert ["#", "BABYLON", "LINDENHURST", "COPIAGUE", "AMITYVILLE", "MASSAPEQUA PARK", "MASSAPEQUA", "SEAFORD", "WANTAGH", "BELLMORE", "MERRICK", "FREEPORT", "BALDWIN", "ROCKVILLE CENTRE", "LYNBROOK", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound1.keySet()
        assert [LT(1, 6), null, LT(1, 38), LT(4, 23), LT(4, 51), LT(5, 22), LT(5, 55), LT(6, 3), LT(6, 31), LT(6, 41), null, LT(7, 3), LT(7, 11), LT(7, 32), LT(7, 41), LT(7, 52), null, null, LT(8, 41), LT(9, 11), null, LT(9, 30), LT(9, 41), LT(10, 12), LT(10, 41), null, LT(11, 41), LT(12, 12), LT(12, 41), null, LT(13, 41), LT(14, 12), LT(14, 41), null, LT(15, 41), null, LT(16, 41), LT(17, 11), LT(17, 41), null, LT(18, 12), LT(18, 41), null, LT(19, 11), LT(19, 41), null, LT(20, 12), LT(20, 41), LT(21, 11), LT(21, 41), null, LT(22, 12), LT(22, 41), null, LT(23, 11), LT(0, 5)] == schedule.westbound1.get("MASSAPEQUA PARK")
        assert [LT(1, 32), null, null, LT(4, 48), null, null, null, null, null, LT(7, 6), null, null, null, null, LT(8, 6), null, null, null, LT(9, 6), null, null, null, LT(10, 6), null, LT(11, 6), null, LT(12, 6), null, LT(13, 6), null, LT(14, 6), null, LT(15, 6), null, LT(16, 6), null, LT(17, 6), null, LT(18, 6), null, null, LT(19, 6), null, null, LT(20, 6), null, null, LT(21, 6), null, LT(22, 6), null, null, LT(23, 6), null, null, null] == schedule.westbound1.get("LYNBROOK")
        assert [LT(1, 18), null, LT(1, 48), LT(4, 33), LT(5, 1), LT(5, 32), LT(6, 5), LT(6, 13), LT(6, 41), LT(6, 51), null, LT(7, 13), LT(7, 21), LT(7, 42), LT(7, 51), LT(8, 1), null, LT(8, 26), LT(8, 51), LT(9, 21), null, LT(9, 40), LT(9, 51), LT(10, 22), LT(10, 51), LT(11, 26), LT(11, 51), LT(12, 22), LT(12, 51), LT(13, 26), LT(13, 51), LT(14, 22), LT(14, 51), LT(15, 26), LT(15, 51), LT(16, 26), LT(16, 51), LT(17, 21), LT(17, 51), null, LT(18, 22), LT(18, 51), null, LT(19, 21), LT(19, 51), null, LT(20, 22), LT(20, 51), LT(21, 21), LT(21, 51), null, LT(22, 22), LT(22, 51), null, LT(23, 21), LT(0, 16)] == schedule.westbound1.get("BELLMORE")

        assert ["#", "BABYLON", "LINDENHURST", "COPIAGUE", "AMITYVILLE", "MASSAPEQUA PARK", "MASSAPEQUA", "SEAFORD", "WANTAGH", "BELLMORE", "MERRICK", "FREEPORT", "BALDWIN", "ROCKVILLE CENTRE", "LYNBROOK", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound2.keySet()
        assert [LT(1, 15), null, LT(1, 54), null, LT(3, 55), LT(4, 57), null, LT(5, 30), LT(5, 35), null, LT(6, 4), null, null, LT(6, 19), null, LT(6, 31), LT(6, 34), null, LT(6, 49), null, null, null, LT(7, 4), null, LT(7, 17), null, null, LT(7, 30), null, null, null, LT(7, 48), LT(7, 56), null, null, LT(8, 7), null, LT(8, 21), null, LT(8, 34), null, LT(8, 55), LT(9, 24), LT(9, 53), null, LT(10, 29), LT(10, 54), null, LT(11, 29), LT(11, 54), null, LT(12, 29), LT(12, 54), LT(13, 29), null, LT(13, 54), null, LT(14, 29), LT(14, 54), null, LT(15, 24), LT(16, 0), null, LT(16, 25), null, LT(16, 57), null, LT(17, 57), null, LT(18, 26), LT(18, 38), LT(18, 57), null, LT(19, 27), LT(19, 57), LT(20, 27), LT(20, 31), LT(20, 59), null, LT(21, 23), LT(21, 30), LT(21, 58), null, LT(22, 31), LT(22, 59), null, LT(23, 31), LT(0, 10)] == schedule.westbound2.get("SEAFORD")
        assert [LT(1, 7), null, LT(1, 46), LT(3, 27), LT(3, 47), LT(4, 49), null, LT(5, 22), LT(5, 27), LT(5, 51), null, LT(6, 6), null, null, LT(6, 22), null, LT(6, 25), LT(6, 38), null, null, null, LT(6, 54), null, LT(7, 2), null, null, null, LT(7, 21), null, null, null, LT(7, 40), LT(7, 48), null, null, LT(7, 57), null, LT(8, 13), null, LT(8, 27), null, LT(8, 47), LT(9, 17), LT(9, 46), null, LT(10, 22), LT(10, 47), null, LT(11, 22), LT(11, 47), null, LT(12, 22), LT(12, 47), LT(13, 22), null, LT(13, 47), null, LT(14, 22), LT(14, 47), null, LT(15, 16), LT(15, 52), LT(16, 13), LT(16, 18), LT(16, 43), LT(16, 49), null, LT(17, 49), null, LT(18, 17), LT(18, 30), LT(18, 49), null, LT(19, 19), LT(19, 49), LT(20, 19), LT(20, 23), LT(20, 51), null, LT(21, 15), LT(21, 22), LT(21, 51), null, LT(22, 23), LT(22, 51), null, LT(23, 23), LT(0, 2)] == schedule.westbound2.get("AMITYVILLE")
        assert [LT(1, 23), null, LT(2, 2), null, LT(4, 2), LT(5, 5), LT(5, 24), null, LT(5, 43), LT(6, 3), null, LT(6, 18), null, null, LT(6, 34), null, LT(6, 42), LT(6, 52), null, null, LT(7, 2), null, null, LT(7, 16), null, null, LT(7, 32), null, null, LT(7, 43), LT(7, 53), LT(7, 56), null, null, null, LT(8, 16), null, LT(8, 29), null, LT(8, 42), null, LT(9, 3), LT(9, 33), LT(10, 2), null, LT(10, 38), LT(11, 4), null, LT(11, 38), LT(12, 4), null, LT(12, 38), LT(13, 4), LT(13, 38), null, LT(14, 4), null, LT(14, 38), LT(15, 4), null, LT(15, 33), LT(16, 8), null, LT(16, 33), null, LT(17, 5), null, LT(18, 5), null, LT(18, 35), LT(18, 46), LT(19, 5), null, LT(19, 35), LT(20, 5), LT(20, 35), LT(20, 39), LT(21, 7), null, LT(21, 31), LT(21, 38), LT(22, 7), null, LT(22, 39), LT(23, 7), null, LT(23, 39), LT(0, 18)] == schedule.westbound2.get("MERRICK")
    }

    @Test
    void testMontauk() {
        ProcessedPDFSchedule schedule = processPDF("MontaukBranch2013121620140223.pdf", "Montauk Branch Timetable", DEC162013, FEB232014, DateTime.parse("2013-12-05T16:43:54.000Z"))
        printSchedule(schedule)
        assert ["#", "PENN STATION", "WOODSIDE", "FOREST HILLS", "KEW GARDENS", "HUNTERSPOINT AVE.", "ATLANTIC TERMINAL", "NOSTRAND AVENUE", "EAST NEW YORK", "JAMAICA", "MINEOLA", "HICKSVILLE", "BABYLON", "BAY SHORE", "ISLIP", "GREAT RIVER", "OAKDALE", "SAYVILLE", "PATCHOGUE", "BELLPORT", "MASTIC-SHIRLEY", "SPEONK", "WESTHAMPTON", "HAMPTON BAYS", "SOUTHAMPTON", "BRIDGEHAMPTON", "EAST HAMPTON", "AMAGANSETT", "MONTAUK"] as Set == schedule.eastbound2.keySet()
        assert [LT(0, 41), LT(1, 18), LT(6, 45), LT(7, 45), LT(8, 45), LT(9, 45), LT(10, 45), LT(11, 45), LT(12, 45), LT(14, 22), LT(14, 45), LT(15, 45), LT(16, 45), LT(18, 45), LT(19, 45), LT(20, 45), LT(21, 45), LT(22, 50)] == schedule.eastbound1.get("ATLANTIC TERMINAL")
        assert [LT(1, 29), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null] == schedule.eastbound1.get("HICKSVILLE")
        assert [LT(1, 46), LT(2, 40), LT(8, 26), LT(8, 46), LT(10, 19), LT(10, 46), LT(12, 19), LT(12, 51), LT(14, 19), LT(15, 35), LT(16, 26), LT(17, 26), LT(18, 19), LT(20, 17), LT(21, 26), LT(22, 19), LT(23, 26), LT(0, 24)] == schedule.eastbound1.get("BABYLON")
        assert [LT(3, 32), null, null, LT(10, 21), null, LT(12, 28), null, LT(14, 35), null, null, null, null, null, null, null, LT(11, 55), null, null] == schedule.eastbound1.get("EAST HAMPTON")

        assert ["#", "PENN STATION", "WOODSIDE", "FOREST HILLS", "KEW GARDENS", "HUNTERSPOINT AVE.", "ATLANTIC TERMINAL", "NOSTRAND AVENUE", "EAST NEW YORK", "JAMAICA", "MINEOLA", "HICKSVILLE", "BABYLON", "BAY SHORE", "ISLIP", "GREAT RIVER", "OAKDALE", "SAYVILLE", "PATCHOGUE", "BELLPORT", "MASTIC-SHIRLEY", "SPEONK", "WESTHAMPTON", "HAMPTON BAYS", "SOUTHAMPTON", "BRIDGEHAMPTON", "EAST HAMPTON", "AMAGANSETT", "MONTAUK"] as Set == schedule.eastbound1.keySet()
        assert [LT(0, 41), LT(6, 37), LT(7, 50), LT(8, 30), LT(9, 5), LT(10, 5), LT(11, 5), LT(11, 5), LT(13, 5), LT(14, 35), LT(15, 23), LT(15, 56), null, LT(16, 20), LT(16, 34), LT(17, 11), LT(17, 23), LT(17, 49), LT(18, 27), LT(19, 23), LT(20, 30), LT(21, 13), LT(22, 36), LT(23, 10)] == schedule.eastbound2.get("ATLANTIC TERMINAL")
        assert [LT(1, 46), LT(7, 55), LT(8, 52), LT(9, 26), LT(10, 27), LT(11, 27), LT(12, 10), LT(12, 27), LT(14, 27), LT(15, 40), LT(16, 28), LT(17, 10), null, null, LT(17, 44), LT(18, 13), LT(18, 44), null, LT(19, 27), LT(20, 36), LT(21, 26), LT(22, 35), LT(23, 35), LT(0, 37)] == schedule.eastbound2.get("BABYLON")
        assert [LT(3, 32), null, LT(10, 27), null, null, null, LT(13, 50), null, null, null, null, null, LT(18, 17), LT(19, 9), null, null, null, LT(20, 41), null, null, LT(23, 32), null, null, null] == schedule.eastbound2.get("EAST HAMPTON")

        assert ["#", "MONTAUK", "AMAGANSETT", "EAST HAMPTON", "BRIDGEHAMPTON", "SOUTHAMPTON", "HAMPTON BAYS", "WESTHAMPTON", "SPEONK", "MASTIC-SHIRLEY", "BELLPORT", "PATCHOGUE", "SAYVILLE", "OAKDALE", "GREAT RIVER", "ISLIP", "BAY SHORE", "BABYLON", "HICKSVILLE", "MINEOLA", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound1.keySet()
        assert [LT(6, 4), LT(7, 15), LT(7, 35), LT(8, 43), LT(10, 35), LT(12, 35), LT(14, 35), LT(15, 35), LT(17, 10), LT(17, 23), LT(18, 21), LT(19, 13), LT(19, 24), LT(20, 23), LT(21, 13), LT(21, 24), LT(22, 23), LT(0, 30)] == schedule.westbound1.get("PATCHOGUE")
        assert [LT(6, 34), LT(7, 45), LT(8, 10), LT(9, 13), LT(11, 10), LT(13, 10), LT(15, 10), LT(16, 10), null, LT(17, 53), LT(18, 53), LT(19, 34), LT(19, 59), LT(20, 58), LT(21, 34), LT(21, 59), LT(22, 53), LT(1, 0)] == schedule.westbound1.get("BABYLON")
        assert [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null] == schedule.westbound1.get("HICKSVILLE")
        assert [LT(7, 39), LT(8, 47), LT(9, 12), LT(10, 21), LT(12, 12), LT(14, 12), LT(16, 12), LT(17, 12), LT(18, 39), LT(18, 59), LT(19, 59), LT(20, 39), LT(21, 12), LT(22, 12), LT(22, 39), LT(23, 14), LT(23, 59), LT(2, 2)] == schedule.westbound1.get("PENN STATION")

        assert ["#", "MONTAUK", "AMAGANSETT", "EAST HAMPTON", "BRIDGEHAMPTON", "SOUTHAMPTON", "HAMPTON BAYS", "WESTHAMPTON", "SPEONK", "MASTIC-SHIRLEY", "BELLPORT", "PATCHOGUE", "SAYVILLE", "OAKDALE", "GREAT RIVER", "ISLIP", "BAY SHORE", "BABYLON", "HICKSVILLE", "MINEOLA", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound2.keySet()
        assert [LT(1, 0), null, null, null, null, null, LT(5, 39), null, null, null, null, null, LT(11, 18), null, null, null, LT(14, 51), null, null, null, null, null, null, null, LT(22, 38)] == schedule.westbound2.get("MONTAUK")
        assert [LT(2, 13), LT(4, 37), LT(5, 8), LT(5, 30), LT(6, 21), null, LT(6, 49), LT(7, 12), LT(7, 31), null, null, null, LT(12, 37), null, LT(14, 0), null, LT(16, 14), null, null, null, LT(20, 0), LT(21, 7), LT(21, 59), null, LT(0, 5)] == schedule.westbound2.get("SPEONK")
        assert [null, LT(6, 38), LT(7, 14), LT(7, 41), LT(8, 5), LT(8, 47), LT(8, 23), LT(9, 14), LT(9, 48), LT(10, 55), LT(11, 55), LT(12, 55), LT(14, 55), LT(14, 55), LT(15, 53), LT(17, 20), LT(18, 1), LT(18, 46), LT(20, 8), LT(21, 10), LT(22, 16), null, null, LT(0, 48), LT(2, 25)] == schedule.westbound2.get("KEW GARDENS")
    }

    @Test
    void testPortWashington() {
        ProcessedPDFSchedule schedule = processPDF("PortWashingtonBranch2013121620140223.pdf", "Port Washington Branch Timetable", DEC162013, FEB232014, DateTime.parse("2013-12-05T16:44:24.000Z"))
        printSchedule(schedule)
        assert ["#", "PENN STATION", "WOODSIDE", "FLUSHING MAIN STREET", "MURRAY HILL", "BROADWAY", "AUBURNDALE", "BAYSIDE", "DOUGLASTON", "LITTLE NECK", "GREAT NECK", "MANHASSET", "PLANDOME", "PORT WASHINGTON"] as Set == schedule.eastbound1.keySet()
        assert [LT(0, 58), LT(1, 16), LT(1, 57), LT(3, 0), LT(3, 45), LT(5, 0), LT(6, 0), LT(7, 0), LT(8, 0), LT(8, 30), LT(9, 0), LT(9, 30), LT(10, 0), LT(10, 30), LT(11, 0), LT(11, 30), LT(12, 0), LT(12, 30), LT(13, 0), LT(13, 30), LT(14, 0), LT(14, 30), LT(15, 0), LT(15, 30), LT(16, 0), LT(16, 30), LT(17, 0), LT(17, 30), null, LT(18, 0), LT(18, 30), null, LT(19, 0), LT(19, 30), null, LT(20, 0), LT(20, 30), LT(21, 0), LT(21, 30), LT(22, 0), LT(22, 30), LT(23, 0), LT(23, 30), LT(0, 2)] == schedule.eastbound1.get("PLANDOME")
        assert ["6400", "6436", "6402", "6438", "6404", "6440", "6406", "6408", "6410", "6412", "6414", "6416", "6418", "6420", "6422", "6424", "6426", "6428", "6450", "6452", "6454", "6456", "6458", "6460", "6462", "6464", "6466", "6468", "6430", "6470", "6472", "6332", "6474", "6476", "6434", "6478", "6480", "6482", "6484", "6486", "6488", "6490", "6492", "6494"] == schedule.eastbound1.get("#")

        assert ["#", "PENN STATION", "WOODSIDE", "FLUSHING MAIN STREET", "MURRAY HILL", "BROADWAY", "AUBURNDALE", "BAYSIDE", "DOUGLASTON", "LITTLE NECK", "GREAT NECK", "MANHASSET", "PLANDOME", "PORT WASHINGTON"] as Set == schedule.eastbound2.keySet()
        assert [LT(0, 31), LT(1, 30), LT(3, 30), LT(5, 40), LT(6, 42), LT(7, 12), LT(8, 7), LT(8, 32), LT(9, 2), LT(9, 30), LT(10, 0), LT(10, 30), LT(11, 0), LT(11, 30), LT(12, 0), LT(12, 30), LT(13, 0), LT(13, 30), LT(14, 0), LT(14, 30), LT(15, 0), LT(15, 29), LT(15, 51), LT(16, 0), null, LT(16, 36), null, LT(16, 57), null, null, null, LT(17, 40), null, null, LT(18, 7), null, LT(18, 25), null, LT(18, 53), null, LT(19, 25), null, LT(20, 0), LT(20, 30), LT(21, 0), LT(21, 30), LT(22, 0), LT(22, 30), LT(23, 0), LT(23, 30), LT(0, 0)] == schedule.eastbound2.get("WOODSIDE")

        assert ["#", "PENN STATION", "WOODSIDE", "FLUSHING MAIN STREET", "MURRAY HILL", "BROADWAY", "AUBURNDALE", "BAYSIDE", "DOUGLASTON", "LITTLE NECK", "GREAT NECK", "MANHASSET", "PLANDOME", "PORT WASHINGTON"] as Set == schedule.westbound1.keySet()
        assert [LT(0, 39), LT(2, 10), LT(4, 10), LT(5, 39), LT(6, 39), LT(7, 9), null, LT(7, 39), LT(8, 9), null, LT(8, 39), LT(9, 9), LT(9, 39), LT(10, 9), LT(10, 39), LT(11, 9), LT(11, 39), LT(12, 9), LT(12, 39), LT(13, 9), LT(13, 39), LT(14, 9), LT(14, 39), LT(15, 9), LT(15, 39), LT(16, 9), LT(16, 39), LT(17, 9), LT(17, 39), LT(18, 9), LT(18, 39), LT(19, 9), LT(19, 39), LT(20, 9), LT(20, 39), LT(21, 9), LT(21, 39), LT(22, 9), LT(22, 39), LT(23, 39)] == schedule.westbound1.get("PORT WASHINGTON")
        assert [LT(1, 5), LT(2, 36), LT(4, 36), LT(6, 5), LT(7, 5), LT(7, 35), LT(7, 59), LT(8, 5), LT(8, 35), LT(8, 42), LT(9, 5), LT(9, 35), LT(10, 5), LT(10, 35), LT(11, 5), LT(11, 35), LT(12, 5), LT(12, 35), LT(13, 5), LT(13, 35), LT(14, 5), LT(14, 35), LT(15, 5), LT(15, 35), LT(16, 5), LT(16, 35), LT(17, 5), LT(17, 35), LT(18, 5), LT(18, 35), LT(19, 5), LT(19, 35), LT(20, 5), LT(20, 35), LT(21, 5), LT(21, 35), LT(22, 5), LT(22, 35), LT(23, 5), LT(0, 5)] == schedule.westbound1.get("FLUSHING MAIN STREET")

        assert ["#", "PENN STATION", "WOODSIDE", "FLUSHING MAIN STREET", "MURRAY HILL", "BROADWAY", "AUBURNDALE", "BAYSIDE", "DOUGLASTON", "LITTLE NECK", "GREAT NECK", "MANHASSET", "PLANDOME", "PORT WASHINGTON"] as Set == schedule.westbound2.keySet()
        assert [LT(1, 3), LT(2, 34), LT(3, 47), LT(5, 33), LT(6, 0), LT(6, 42), LT(6, 53), null, LT(7, 23), null, null, null, null, LT(8, 9), null, null, LT(8, 39), null, LT(8, 53), null, LT(9, 13), null, LT(9, 47), null, LT(10, 33), null, LT(11, 33), null, LT(12, 33), null, LT(13, 33), null, LT(14, 33), null, LT(15, 33), null, LT(16, 30), LT(17, 0), LT(17, 24), null, null, LT(18, 37), null, null, LT(19, 21), LT(19, 33), LT(20, 3), LT(20, 33), LT(21, 3), LT(21, 15), LT(21, 33), LT(22, 3), LT(22, 33), LT(23, 3), LT(0, 3)] == schedule.westbound2.get("MURRAY HILL")
        assert [LT(0, 51), LT(2, 22), LT(3, 35), LT(5, 21), LT(5, 48), LT(6, 30), LT(6, 40), null, LT(7, 9), LT(7, 22), null, null, LT(7, 55), null, LT(8, 7), null, null, LT(8, 32), LT(8, 41), null, LT(9, 1), null, LT(9, 35), LT(9, 52), LT(10, 22), LT(10, 52), LT(11, 22), LT(11, 52), LT(12, 22), LT(12, 52), LT(13, 22), LT(13, 52), LT(14, 22), LT(14, 52), LT(15, 22), LT(15, 52), LT(16, 19), LT(16, 49), LT(17, 12), null, LT(17, 47), LT(18, 26), null, LT(18, 47), LT(19, 9), LT(19, 21), LT(19, 51), LT(20, 21), LT(20, 51), LT(20, 57), LT(21, 21), LT(21, 51), LT(22, 21), LT(22, 51), LT(23, 51)] == schedule.westbound2.get("LITTLE NECK")
    }

    @Test
    void testRonkonkoma() {
        ProcessedPDFSchedule schedule = processPDF("RonkonkomaBranch2013121620140223.pdf", "Ronkonkoma Branch Timetable", DEC162013, FEB232014, DateTime.parse("2013-12-05T16:44:39.000Z"))
        printSchedule(schedule)
        assert ["#", "PENN STATION", "WOODSIDE", "FOREST HILLS", "KEW GARDENS", "HUNTERSPOINT AVE.", "ATLANTIC TERMINAL", "NOSTRAND AVENUE", "EAST NEW YORK", "JAMAICA", "MINEOLA", "HICKSVILLE", "BETHPAGE", "FARMINGDALE", "PINELAWN", "WYANDANCH", "DEER PARK", "BRENTWOOD", "CENTRAL ISLIP", "RONKONKOMA"] as Set == schedule.eastbound1.keySet()
        assert [LT(0, 50), null, LT(1, 48), LT(2, 38), LT(3, 28), LT(4, 29), LT(5, 19), LT(6, 27), LT(7, 28), LT(8, 27), LT(9, 27), LT(10, 27), LT(11, 27), LT(12, 27), LT(13, 27), LT(14, 27), LT(15, 27), LT(16, 9), null, LT(16, 27), LT(17, 9), LT(17, 27), LT(18, 9), LT(18, 27), LT(19, 9), LT(19, 27), LT(20, 27), LT(21, 27), LT(22, 27), LT(23, 54)] == schedule.eastbound1.get("MINEOLA")
        assert [LT(1, 29), LT(2, 1), LT(2, 34), LT(3, 18), LT(4, 8), LT(5, 9), LT(5, 58), LT(7, 25), LT(8, 25), LT(9, 25), LT(10, 25), LT(11, 25), LT(12, 25), LT(13, 25), LT(14, 25), LT(15, 25), LT(16, 25), LT(16, 47), null, LT(17, 25), LT(17, 47), LT(18, 25), LT(18, 47), LT(19, 25), LT(19, 47), LT(20, 24), LT(21, 25), LT(22, 25), LT(23, 25), LT(0, 32)] == schedule.eastbound1.get("CENTRAL ISLIP")
        assert [LT(1, 36), LT(2, 7), LT(2, 41), LT(3, 25), LT(4, 14), LT(5, 16), LT(6, 5), LT(7, 32), LT(8, 32), LT(9, 32), LT(10, 32), LT(11, 32), LT(12, 32), LT(13, 32), LT(14, 32), LT(15, 32), LT(16, 32), LT(16, 55), null, LT(17, 32), LT(17, 54), LT(18, 32), LT(18, 54), LT(19, 32), LT(19, 54), LT(20, 31), LT(21, 32), LT(22, 32), LT(23, 32), LT(0, 39)] == schedule.eastbound1.get("RONKONKOMA")

        assert ["#", "PENN STATION", "WOODSIDE", "FOREST HILLS", "KEW GARDENS", "HUNTERSPOINT AVE.", "ATLANTIC TERMINAL", "NOSTRAND AVENUE", "EAST NEW YORK", "JAMAICA", "MINEOLA", "HICKSVILLE", "BETHPAGE", "FARMINGDALE", "PINELAWN", "WYANDANCH", "DEER PARK", "BRENTWOOD", "CENTRAL ISLIP", "RONKONKOMA"] as Set == schedule.eastbound2.keySet()
        assert [LT(0, 50), LT(1, 58), LT(3, 52), LT(5, 47), LT(6, 39), null, LT(8, 15), LT(8, 51), LT(9, 51), LT(10, 51), LT(11, 51), LT(12, 51), LT(13, 23), LT(13, 51), LT(14, 16), LT(14, 51), LT(15, 30), LT(15, 30), LT(16, 21), LT(16, 44), null, LT(17, 9), LT(17, 18), LT(17, 32), LT(17, 32), null, LT(18, 0), null, null, null, LT(18, 47), LT(19, 10), LT(19, 48), LT(20, 17), LT(20, 50), LT(21, 49), LT(22, 49), LT(23, 17), LT(23, 50)] == schedule.eastbound2.get("MINEOLA")
        assert [LT(1, 5), LT(2, 15), LT(4, 5), LT(6, 0), LT(6, 54), null, null, LT(9, 5), LT(10, 5), LT(11, 5), LT(12, 4), LT(13, 5), LT(13, 36), LT(14, 5), LT(14, 32), LT(15, 5), LT(15, 53), LT(16, 1), LT(16, 44), LT(16, 59), LT(17, 11), LT(17, 25), null, LT(17, 51), null, null, LT(18, 13), null, LT(18, 53), LT(18, 39), LT(19, 7), LT(19, 40), LT(20, 1), LT(20, 30), LT(21, 5), LT(22, 5), LT(23, 5), LT(23, 34), LT(0, 5)] == schedule.eastbound2.get("BETHPAGE")
        assert [LT(1, 29), LT(2, 40), LT(4, 31), LT(6, 26), null, LT(8, 3), LT(8, 51), LT(9, 32), LT(10, 30), LT(11, 30), LT(12, 30), LT(13, 30), LT(14, 0), LT(14, 30), LT(15, 1), LT(15, 30), LT(16, 18), LT(16, 27), LT(17, 9), null, LT(17, 37), LT(17, 50), LT(17, 58), null, LT(18, 14), LT(18, 31), LT(18, 38), LT(18, 42), LT(19, 20), LT(19, 4), LT(19, 32), LT(20, 5), LT(20, 26), LT(20, 55), LT(21, 30), LT(22, 30), LT(23, 31), LT(23, 58), LT(0, 30)] == schedule.eastbound2.get("CENTRAL ISLIP")
        assert [LT(1, 36), LT(2, 46), LT(4, 37), LT(6, 37), null, LT(8, 10), LT(8, 59), LT(9, 39), LT(10, 37), LT(11, 37), LT(12, 37), LT(13, 37), LT(14, 7), LT(14, 37), LT(15, 8), LT(15, 37), LT(16, 25), LT(16, 34), LT(17, 16), null, LT(17, 44), LT(17, 57), LT(18, 4), null, LT(18, 21), LT(18, 38), LT(18, 45), LT(18, 49), LT(19, 27), LT(19, 11), LT(19, 39), LT(20, 12), LT(20, 33), LT(21, 2), LT(21, 37), LT(22, 37), LT(23, 38), LT(0, 5), LT(0, 37)] == schedule.eastbound2.get("RONKONKOMA")

        assert ["#", "RONKONKOMA", "CENTRAL ISLIP", "BRENTWOOD", "DEER PARK", "WYANDANCH", "PINELAWN", "FARMINGDALE", "BETHPAGE", "HICKSVILLE", "MINEOLA", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound1.keySet()
        assert [LT(0, 44), LT(2, 13), LT(3, 45), LT(5, 10), LT(5, 37), LT(6, 10), LT(6, 40), null, LT(7, 10), LT(7, 10), LT(7, 40), LT(8, 10), LT(8, 40), LT(9, 40), LT(10, 5), LT(10, 40), LT(11, 5), LT(11, 40), LT(12, 5), LT(12, 40), LT(13, 40), LT(14, 40), LT(15, 40), LT(16, 40), LT(17, 40), LT(18, 40), LT(19, 40), LT(20, 40), LT(21, 40), LT(22, 40), LT(23, 18)] == schedule.westbound1.get("RONKONKOMA")
        assert [LT(2, 2), LT(3, 28), LT(5, 2), LT(6, 28), LT(6, 59), LT(7, 28), LT(7, 59), LT(8, 15), LT(8, 28), LT(8, 28), LT(8, 59), LT(9, 28), LT(9, 59), LT(10, 59), LT(11, 28), LT(11, 59), LT(12, 28), LT(12, 59), LT(13, 28), LT(13, 59), LT(14, 59), LT(15, 59), LT(16, 59), LT(17, 59), LT(18, 59), LT(19, 59), LT(20, 59), LT(21, 59), LT(22, 59), LT(23, 59), LT(0, 44)] == schedule.westbound1.get("PENN STATION")

        assert ["#", "RONKONKOMA", "CENTRAL ISLIP", "BRENTWOOD", "DEER PARK", "WYANDANCH", "PINELAWN", "FARMINGDALE", "BETHPAGE", "HICKSVILLE", "MINEOLA", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound2.keySet()
        assert [LT(0, 44), LT(1, 46), LT(4, 6), LT(4, 58), LT(5, 29), null, LT(5, 42), LT(6, 8), LT(6, 24), null, LT(6, 39), null, LT(6, 56), LT(7, 4), LT(7, 19), LT(7, 32), null, LT(7, 40), LT(7, 57), LT(8, 31), LT(9, 11), null, LT(10, 11), null, LT(11, 11), null, LT(12, 11), LT(13, 11), LT(14, 11), LT(15, 11), LT(16, 11), LT(16, 48), null, null, LT(19, 13), LT(19, 42), LT(19, 58), LT(20, 39), LT(21, 11), LT(22, 11), LT(23, 8)] == schedule.westbound2.get("RONKONKOMA")
        assert [LT(1, 20), LT(2, 23), LT(4, 43), LT(5, 35), null, LT(6, 11), LT(6, 19), null, LT(6, 50), LT(7, 6), null, null, LT(7, 33), null, null, null, LT(8, 7), LT(8, 19), LT(8, 33), LT(9, 7), LT(9, 49), LT(10, 10), LT(10, 49), LT(11, 10), LT(11, 49), LT(12, 10), LT(12, 49), LT(13, 49), LT(14, 49), LT(15, 49), LT(16, 48), LT(17, 24), LT(18, 35), LT(19, 11), LT(19, 50), LT(20, 19), LT(20, 38), LT(21, 20), LT(21, 51), LT(22, 49), LT(23, 47)] == schedule.westbound2.get("HICKSVILLE")
    }

    @Test
    void testPortJefferson() {
        ProcessedPDFSchedule schedule = processPDF("PortJeffersonBranch2013121620140223.pdf", "Port Jefferson Branch Timetable", DEC162013, FEB232014, DateTime.parse("2013-12-05T16:44:14.000Z"))
        printSchedule(schedule)
        assert ["#", "PENN STATION", "WOODSIDE", "FOREST HILLS", "KEW GARDENS", "HUNTERSPOINT AVE.", "ATLANTIC TERMINAL", "NOSTRAND AVENUE", "EAST NEW YORK", "JAMAICA", "NEW HYDE PARK", "MERILLON AVENUE", "MINEOLA", "CARLE PLACE", "WESTBURY", "HICKSVILLE", "SYOSSET", "COLD SPRING HARBOR", "HUNTINGTON", "GREENLAWN", "NORTHPORT", "KINGS PARK", "SMITHTOWN", "ST. JAMES", "STONY BROOK", "PORT JEFFERSON"] as Set == schedule.eastbound1.keySet()
        assert [LT(0, 20), LT(0, 57), LT(0, 57), LT(1, 25), LT(1, 25), LT(1, 25), null, null, null, LT(2, 58), LT(2, 58), null, LT(4, 24), LT(4, 24), null, null, null, null, LT(6, 43), LT(7, 15), LT(7, 33), LT(7, 33), LT(8, 15), LT(8, 15), LT(8, 43), LT(8, 43), LT(9, 15), LT(9, 15), LT(9, 43), LT(10, 15), LT(10, 15), LT(10, 43), LT(10, 43), LT(11, 15), LT(11, 15), LT(11, 43), LT(12, 15), LT(12, 15), LT(12, 43), LT(12, 43), LT(13, 15), LT(13, 15), LT(13, 43), LT(14, 15), LT(14, 15), LT(14, 43), LT(14, 43), LT(15, 15), LT(15, 33), LT(15, 33), LT(15, 33), LT(15, 33), LT(15, 33), LT(16, 15), LT(16, 33), LT(16, 33), LT(16, 33), LT(16, 33), LT(17, 15), LT(17, 15), LT(17, 15), LT(17, 43), LT(17, 43), LT(17, 43), LT(18, 15), LT(18, 15), LT(18, 15), LT(18, 43), LT(18, 43), LT(18, 43), LT(19, 15), LT(19, 15), LT(19, 43), LT(19, 43), LT(20, 15), LT(20, 33), LT(20, 33), LT(21, 15), LT(21, 15), LT(21, 43), LT(21, 43), LT(22, 15), LT(22, 33), LT(22, 53), LT(23, 15), LT(23, 15), LT(23, 46)] == schedule.eastbound1.get("KEW GARDENS")
        assert [LT(0, 59), LT(1, 29), LT(1, 33), LT(1, 59), LT(2, 5), LT(2, 32), LT(2, 47), LT(3, 2), LT(3, 33), LT(3, 38), LT(3, 56), LT(4, 38), LT(5, 3), LT(5, 28), LT(6, 12), LT(6, 37), LT(6, 55), LT(7, 10), LT(7, 38), LT(7, 55), LT(8, 10), LT(8, 37), LT(8, 55), LT(9, 10), null, LT(9, 37), LT(9, 55), LT(10, 10), LT(10, 37), LT(10, 55), LT(11, 10), null, LT(11, 37), LT(11, 55), LT(12, 10), LT(12, 37), LT(12, 55), LT(13, 10), null, LT(13, 37), LT(13, 55), LT(14, 10), LT(14, 37), LT(14, 55), LT(15, 10), null, LT(15, 37), LT(15, 55), LT(16, 10), LT(16, 18), LT(16, 37), LT(16, 40), LT(16, 51), LT(16, 55), LT(17, 10), null, LT(17, 18), LT(17, 37), LT(17, 54), LT(17, 55), LT(18, 10), null, LT(18, 18), LT(18, 37), LT(18, 53), LT(18, 55), LT(19, 10), null, LT(19, 18), LT(19, 37), LT(19, 55), LT(20, 10), null, LT(20, 37), LT(20, 55), LT(21, 10), LT(21, 37), LT(21, 55), LT(22, 10), null, LT(22, 37), LT(22, 55), LT(23, 10), LT(23, 38), LT(0, 2), null, LT(0, 30)] == schedule.eastbound1.get("HICKSVILLE")
        assert [null, null, null, null, null, LT(2, 50), null, null, null, null, LT(4, 15), null, null, null, null, LT(7, 3), null, null, null, null, LT(8, 36), null, null, null, null, LT(10, 3), null, null, null, null, LT(11, 36), null, null, null, null, LT(13, 3), null, null, null, null, null, LT(14, 36), null, null, null, null, LT(16, 3), null, null, null, null, null, LT(17, 11), null, LT(17, 36), null, null, null, null, null, null, null, null, LT(19, 3), null, null, null, null, null, null, null, LT(20, 36), null, null, null, null, LT(22, 3), null, null, null, null, null, LT(23, 36), null, null, null, LT(0, 54)] == schedule.eastbound1.get("HUNTINGTON")
        assert [null, null, null, null, null, LT(3, 36), null, null, null, null, LT(5, 3), null, null, null, null, LT(7, 51), null, null, null, null, LT(9, 25), null, null, null, null, LT(10, 51), null, null, null, null, LT(12, 25), null, null, null, null, LT(13, 51), null, null, null, null, null, LT(15, 25), null, null, null, null, LT(16, 51), null, null, null, null, null, LT(18, 1), null, LT(18, 25), null, null, null, null, null, null, null, null, LT(19, 51), null, null, null, null, null, null, null, LT(21, 25), null, null, null, null, LT(22, 51), null, null, null, null, null, LT(0, 25), null, null, null, LT(1, 41)] == schedule.eastbound1.get("PORT JEFFERSON")

        assert ["#", "PENN STATION", "WOODSIDE", "FOREST HILLS", "KEW GARDENS", "HUNTERSPOINT AVE.", "ATLANTIC TERMINAL", "NOSTRAND AVENUE", "EAST NEW YORK", "JAMAICA", "NEW HYDE PARK", "MERILLON AVENUE", "MINEOLA", "CARLE PLACE", "WESTBURY", "HICKSVILLE", "SYOSSET", "COLD SPRING HARBOR", "HUNTINGTON", "GREENLAWN", "NORTHPORT", "KINGS PARK", "SMITHTOWN", "ST. JAMES", "STONY BROOK", "PORT JEFFERSON"] as Set == schedule.eastbound1.keySet()
        assert [null, null, LT(1, 44), null, null, null, LT(3, 46), null, LT(5, 36), null, LT(6, 32), null, LT(8, 18), null, null, null, null, LT(9, 8), null, null, null, LT(10, 15), null, LT(11, 15), null, null, LT(12, 15), null, null, LT(13, 15), null, null, null, LT(14, 15), null, LT(14, 44), null, LT(15, 10), LT(15, 10), null, null, LT(15, 33), null, null, null, LT(16, 6), null, null, null, null, LT(16, 40), null, null, null, null, LT(17, 12), null, null, null, LT(17, 35), null, null, null, null, null, null, null, LT(18, 19), null, null, null, null, null, null, null, LT(18, 50), null, null, null, LT(19, 13), null, null, LT(19, 37), null, null, null, null, LT(20, 36), null, LT(21, 3), LT(21, 21), null, null, LT(22, 23), null, null, LT(23, 2), null, LT(23, 44), null, null, LT(0, 23)] == schedule.eastbound2.get("CARLE PLACE")
        assert [null, null, LT(1, 36), null, null, null, LT(3, 38), null, LT(5, 28), null, LT(6, 25), null, null, LT(8, 17), null, LT(8, 37), null, LT(9, 0), null, null, null, LT(10, 7), null, LT(11, 7), null, null, LT(12, 7), null, null, LT(13, 7), null, null, null, LT(14, 7), null, null, null, LT(15, 2), LT(15, 2), null, null, LT(15, 25), null, null, null, LT(15, 58), null, null, null, null, LT(16, 32), null, null, null, null, LT(17, 4), null, null, null, LT(17, 27), null, null, null, null, null, null, null, LT(18, 8), null, null, null, null, null, null, null, LT(18, 42), null, null, null, LT(19, 6), null, null, LT(19, 29), null, null, null, null, LT(20, 28), null, LT(20, 55), LT(21, 13), null, null, LT(22, 15), null, null, LT(22, 54), null, LT(23, 36), null, null, LT(0, 16)] == schedule.eastbound2.get("NEW HYDE PARK")
        assert [null, null, null, null, null, LT(3, 12), null, null, null, null, LT(7, 34), null, null, null, LT(9, 31), null, null, null, null, null, LT(10, 48), null, null, LT(12, 14), null, null, null, null, LT(13, 48), null, null, null, null, LT(15, 15), null, null, null, null, null, null, null, LT(16, 31), null, null, null, null, null, LT(17, 4), null, null, null, null, null, LT(17, 43), null, null, null, LT(18, 13), null, null, null, null, LT(18, 37), null, null, null, null, null, null, LT(19, 7), null, null, LT(19, 37), null, LT(19, 37), null, null, LT(19, 52), null, null, null, null, null, null, LT(20, 57), null, null, null, null, null, LT(22, 20), null, null, LT(23, 17), null, null, null, LT(0, 12), null, null, null, LT(1, 20)] == schedule.eastbound2.get("SMITHTOWN")
        assert ["2000", "2702", "1602", "2002", "500", "602", "1604", "2004", "1606", "2006", "604", "2300", "2008", "502", "606", "1612", "2010", "1614", "504", "1616", "608", "1618", "2014", "610", "506", "2016", "1622", "550", "650", "1702", "552", "2100", "2052", "652", "2102", "1708", "2054", "1250", "1710", "2772", "554", "654", "2094", "2056", "1252", "1714", "556", "656", "1716", "2058", "1718", "2350", "558", "658", "1722", "2096", "2778", "660", "2062", "2354", "560", "2064", "662", "1724", "1726", "2068", "1728", "1256", "1730", "664", "2070", "1732", "666", "768", "1258", "1734", "2078", "668", "1736", "1260", "566", "2080", "1738", "2082", "670", "2084", "568", "1742", "2086", "1268", "672", "570", "2088", "674", "572", "2090", "1750", "676", "1752", "2092", "574", "600"] == schedule.eastbound2.get("#")

        assert ["#", "PORT JEFFERSON", "STONY BROOK", "ST. JAMES", "SMITHTOWN", "KINGS PARK", "NORTHPORT", "GREENLAWN", "HUNTINGTON", "COLD SPRING HARBOR", "SYOSSET", "HICKSVILLE", "WESTBURY", "CARLE PLACE", "MINEOLA", "MERILLON AVENUE", "NEW HYDE PARK", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound1.keySet()
        assert [LT(0, 16), LT(0, 35), null, LT(2, 4), null, LT(3, 47), null, null, LT(5, 29), LT(5, 42), null, LT(6, 3), null, null, LT(6, 36), null, LT(7, 3), null, null, null, LT(7, 30), LT(7, 36), null, LT(8, 3), null, null, LT(8, 36), null, LT(9, 3), LT(9, 18), LT(9, 36), null, LT(10, 3), null, null, LT(10, 36), null, LT(11, 3), null, LT(11, 36), null, LT(12, 3), null, null, LT(12, 36), null, LT(13, 3), LT(13, 36), null, LT(14, 3), null, LT(14, 36), null, LT(15, 3), LT(15, 36), null, LT(16, 3), null, LT(16, 36), null, LT(17, 3), null, LT(17, 36), null, LT(18, 3), null, LT(18, 36), null, LT(19, 3), LT(19, 36), null, LT(20, 3), null, LT(20, 36), null, LT(21, 3), LT(21, 36), null, null, LT(22, 36), null, LT(23, 3), LT(23, 33), null, LT(0, 35)] == schedule.westbound1.get("HUNTINGTON")
        assert [null, null, null, null, null, null, null, null, LT(5, 11), null, null, null, null, null, LT(6, 11), null, null, null, null, null, null, null, null, LT(7, 37), null, null, null, null, null, LT(8, 54), LT(9, 11), null, null, null, null, null, null, LT(10, 37), null, null, null, null, null, null, LT(12, 11), null, null, null, null, LT(13, 37), null, null, null, null, LT(15, 11), null, null, null, null, null, LT(16, 37), null, null, null, null, null, LT(18, 11), null, null, null, null, LT(19, 37), null, null, null, null, LT(21, 11), null, null, null, null, LT(22, 37), null, null, LT(0, 11)] == schedule.westbound1.get("KINGS PARK")
        assert [LT(0, 44), LT(1, 3), LT(1, 27), LT(2, 33), LT(2, 55), LT(4, 14), null, null, LT(5, 59), LT(6, 11), null, LT(6, 31), null, LT(7, 0), LT(7, 3), null, LT(7, 31), null, null, null, LT(7, 58), LT(8, 4), null, LT(8, 31), null, LT(9, 0), LT(9, 3), null, LT(9, 31), null, LT(10, 3), null, LT(10, 31), LT(10, 51), LT(11, 0), LT(11, 3), null, LT(11, 31), LT(11, 51), LT(12, 3), null, LT(12, 31), LT(12, 51), LT(13, 0), LT(13, 3), null, LT(13, 31), LT(14, 3), null, LT(14, 31), LT(15, 0), LT(15, 3), null, LT(15, 31), LT(16, 3), null, LT(16, 31), LT(17, 0), LT(17, 3), null, LT(17, 31), LT(18, 0), LT(18, 3), null, LT(18, 31), LT(19, 0), LT(19, 3), null, LT(19, 31), LT(20, 3), null, LT(20, 31), LT(21, 0), LT(21, 3), null, LT(21, 31), LT(22, 3), null, LT(23, 0), LT(23, 3), null, LT(23, 31), LT(23, 59), LT(0, 6), LT(1, 3)] == schedule.westbound1.get("MINEOLA")
        assert ["7601", "7603", "8001", "7605", "8003", "7607", "8005", "8081", "6601", "7651", "8007", "7609", "8083", "6501", "6603", "8009", "7613", "8301", "8085", "8085", "7653", "7615", "8011", "6605", "8087", "6505", "7619", "8013", "7621", "6681", "6607", "8015", "7625", "8091", "6507", "7627", "8017", "6609", "8093", "7631", "8019", "7701", "8095", "6551", "6611", "8051", "7705", "7707", "8053", "6651", "6555", "7711", "8055", "7713", "6653", "8057", "7717", "6557", "7719", "8059", "6655", "6559", "7723", "8061", "7725", "6561", "6657", "8063", "7729", "7731", "8065", "6659", "6563", "7735", "8067", "7737", "6661", "8069", "6565", "7743", "8071", "6663", "7747", "8073", "6665"] == schedule.westbound1.get("#")

        assert ["#", "PORT JEFFERSON", "STONY BROOK", "ST. JAMES", "SMITHTOWN", "KINGS PARK", "NORTHPORT", "GREENLAWN", "HUNTINGTON", "COLD SPRING HARBOR", "SYOSSET", "HICKSVILLE", "WESTBURY", "CARLE PLACE", "MINEOLA", "MERILLON AVENUE", "NEW HYDE PARK", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound2.keySet()
        assert [null, null, null, null, null, null, null, LT(4, 18), null, null, LT(4, 55), null, null, null, null, null, null, LT(5, 44), null, null, null, LT(5, 59), null, null, null, LT(6, 18), null, null, null, null, null, null, LT(6, 45), null, null, null, LT(6, 57), null, null, null, null, null, LT(7, 35), null, null, null, LT(8, 34), null, null, null, LT(9, 10), null, null, null, LT(10, 10), null, null, null, LT(11, 36), null, null, null, null, LT(13, 10), null, null, null, null, LT(14, 37), null, null, null, null, LT(16, 6), null, null, null, null, null, null, null, null, null, null, null, null, null, null, LT(19, 10), null, null, null, null, null, LT(20, 34), null, null, null, LT(21, 41), null, null, null, LT(23, 22)] == schedule.westbound2.get("PORT JEFFERSON")
        assert [null, null, null, null, null, null, null, LT(4, 39), null, null, LT(5, 16), null, null, null, null, null, null, LT(6, 5), null, null, null, LT(6, 20), null, null, null, LT(6, 39), null, null, null, null, null, null, LT(7, 6), null, null, null, LT(7, 18), null, null, null, null, null, LT(7, 58), null, null, null, LT(8, 56), null, null, null, LT(9, 31), null, null, null, LT(10, 30), null, null, null, LT(11, 56), null, null, null, null, LT(13, 31), null, null, null, null, LT(14, 58), null, null, null, null, LT(16, 31), null, null, null, null, null, null, null, null, null, null, null, null, null, LT(19, 7), LT(19, 37), null, null, null, null, null, LT(20, 55), null, null, null, LT(22, 2), null, null, null, LT(23, 43)] == schedule.westbound2.get("SMITHTOWN")
        assert [LT(1, 9), LT(1, 30), LT(1, 58), LT(2, 32), LT(2, 54), LT(4, 40), LT(5, 45), LT(6, 8), LT(6, 8), LT(6, 24), LT(6, 33), LT(6, 33), LT(6, 48), LT(7, 6), LT(7, 6), LT(7, 6), LT(7, 6), LT(7, 15), null, LT(7, 27), LT(7, 37), LT(7, 37), null, LT(8, 1), LT(8, 1), LT(8, 1), null, LT(8, 1), null, LT(8, 17), LT(8, 17), null, null, LT(8, 30), null, LT(8, 30), LT(8, 50), LT(8, 50), LT(8, 50), LT(9, 5), LT(9, 5), LT(9, 5), LT(9, 25), LT(9, 25), LT(9, 45), LT(9, 55), LT(10, 37), LT(10, 37), LT(10, 37), LT(10, 52), LT(11, 12), LT(11, 38), LT(11, 38), LT(11, 52), LT(12, 12), LT(12, 38), LT(12, 52), LT(13, 12), LT(13, 38), LT(13, 38), LT(14, 12), LT(14, 38), LT(14, 38), LT(15, 12), LT(15, 38), LT(15, 38), LT(16, 12), LT(16, 23), LT(16, 48), LT(17, 3), LT(17, 27), LT(17, 27), LT(17, 58), LT(17, 58), LT(17, 58), LT(18, 10), LT(19, 12), LT(19, 12), LT(19, 24), LT(19, 46), LT(19, 46), LT(19, 46), LT(19, 59), LT(20, 22), LT(20, 22), LT(20, 45), LT(20, 59), LT(20, 59), LT(21, 31), LT(21, 31), LT(21, 31), LT(21, 31), LT(21, 54), LT(22, 25), LT(22, 25), LT(22, 25), LT(22, 34), LT(22, 58), LT(23, 22), LT(23, 51), LT(0, 25), LT(0, 25), LT(1, 9)] == schedule.westbound2.get("WOODSIDE")
    }

    @Test
    void testOysterBay() {
        ProcessedPDFSchedule schedule = processPDF("OysterBayBranch2013121620140223.pdf", "Oyster Bay Branch Timetable", DEC162013, FEB232014, DateTime.parse("2013-12-05T16:44:03.000Z"))
        printSchedule(schedule)
        assert ["#", "PENN STATION", "WOODSIDE", "FOREST HILLS", "KEW GARDENS", "HUNTERSPOINT AVE.", "ATLANTIC TERMINAL", "NOSTRAND AVENUE", "EAST NEW YORK", "JAMAICA", "MINEOLA", "EAST WILLISTON", "ALBERTSON", "ROSLYN", "GREENVALE", "GLEN HEAD", "SEA CLIFF", "GLEN STREET", "GLEN COVE", "LOCUST VALLEY", "OYSTER BAY"] as Set == schedule.eastbound1.keySet()
        assert [LT(9, 46), LT(11, 46), LT(13, 46), LT(15, 46), LT(17, 46), LT(18, 46), LT(19, 46), LT(20, 46), LT(22, 46), LT(0, 43)] == schedule.eastbound1.get("OYSTER BAY")
        assert [LT(9, 16), LT(11, 16), LT(13, 16), LT(15, 16), LT(17, 16), LT(18, 16), LT(19, 16), LT(20, 16), LT(22, 16), LT(0, 13)] == schedule.eastbound1.get("ROSLYN")

        assert ["#", "PENN STATION", "WOODSIDE", "FOREST HILLS", "KEW GARDENS", "HUNTERSPOINT AVE.", "ATLANTIC TERMINAL", "NOSTRAND AVENUE", "EAST NEW YORK", "JAMAICA", "MINEOLA", "EAST WILLISTON", "ALBERTSON", "ROSLYN", "GREENVALE", "GLEN HEAD", "SEA CLIFF", "GLEN STREET", "GLEN COVE", "LOCUST VALLEY", "OYSTER BAY"] as Set == schedule.eastbound2.keySet()
        assert [LT(2, 27), LT(8, 48), LT(9, 45), LT(11, 45), LT(12, 45), LT(13, 45), LT(15, 46), LT(16, 32), LT(17, 15), LT(17, 59), LT(18, 43), LT(19, 15), LT(19, 39), LT(20, 46), LT(21, 46), LT(22, 49), LT(0, 21)] == schedule.eastbound2.get("GLEN COVE")
        assert [LT(1, 21), LT(7, 39), LT(8, 33), LT(10, 41), LT(11, 41), LT(12, 41), LT(14, 36), LT(15, 27), LT(16, 15), LT(16, 54), LT(17, 33), LT(18, 16), LT(18, 36), LT(19, 44), LT(20, 42), LT(21, 42), LT(23, 14)] == schedule.eastbound2.get("PENN STATION")

        assert ["#", "OYSTER BAY", "LOCUST VALLEY", "GLEN COVE", "GLEN STREET", "SEA CLIFF", "GLEN HEAD", "GREENVALE", "ROSLYN", "ALBERTSON", "EAST WILLISTON", "MINEOLA", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound1.keySet()
        assert [LT(6, 42), LT(8, 42), LT(10, 42), LT(12, 42), LT(14, 42), LT(16, 42), LT(17, 42), LT(18, 42), LT(20, 42), LT(22, 42)] == schedule.westbound1.get("GLEN HEAD")
        assert [LT(6, 34), LT(8, 34), LT(10, 34), LT(12, 34), LT(14, 34), LT(16, 34), LT(17, 34), LT(18, 34), LT(20, 34), LT(22, 34)] == schedule.westbound1.get("GLEN COVE")

        assert ["#", "OYSTER BAY", "LOCUST VALLEY", "GLEN COVE", "GLEN STREET", "SEA CLIFF", "GLEN HEAD", "GREENVALE", "ROSLYN", "ALBERTSON", "EAST WILLISTON", "MINEOLA", "JAMAICA", "EAST NEW YORK", "NOSTRAND AVENUE", "ATLANTIC TERMINAL", "HUNTERSPOINT AVE.", "KEW GARDENS", "FOREST HILLS", "WOODSIDE", "PENN STATION"] as Set == schedule.westbound2.keySet()
        assert [LT(5, 44), LT(6, 22), LT(7, 1), null, LT(7, 45), LT(8, 13), LT(8, 48), LT(10, 2), LT(11, 2), LT(13, 2), LT(14, 2), LT(15, 2), LT(16, 52), LT(18, 25), LT(19, 6), LT(20, 53), LT(21, 55), LT(23, 49)] == schedule.westbound2.get("ALBERTSON")
        assert [LT(5, 37), LT(6, 15), LT(6, 54), null, LT(7, 38), LT(8, 6), LT(8, 41), LT(9, 55), LT(10, 55), LT(12, 55), LT(13, 55), LT(14, 55), LT(16, 45), LT(18, 18), LT(18, 59), LT(20, 46), LT(21, 48), LT(23, 42)] == schedule.westbound2.get("GREENVALE")
    }

    private ProcessedPDFSchedule processPDF(
            final String file,
            final String expectedTitle,
            final LocalDate expectedFrom, final LocalDate expectedTo, final DateTime expectedModified) {
        InputStream is = new BufferedInputStream(PDFProcessorTest.classLoader.getResourceAsStream(file))
        ProcessedPDFSchedule parsedSchedule = pdfProcessor.parse(is, file)
        is.close()
        assert expectedTitle == parsedSchedule.title
        assert expectedFrom == parsedSchedule.from
        assert expectedTo == parsedSchedule.to
        assert expectedModified == parsedSchedule.modified
        parsedSchedule
    }

    private void printSchedule(final ProcessedPDFSchedule schedule) {

        printScheduleSubset(schedule.eastbound2)
        printScheduleSubset(schedule.eastbound1)
        printScheduleSubset(schedule.westbound2)
        printScheduleSubset(schedule.westbound1)
    }

    public void printScheduleSubset(LinkedHashMap<String, List> schedule) {
        println schedule
        println "[" + schedule.keySet().collect { "\"" + it + "\"" }.join(",") + "] as Set"
        schedule.each {
            println it.key;
            println "[" + it.value.collect {
                (it && it in LocalTime) ? "LT(" + it.hourOfDay + "," + it.minuteOfHour + ")" : it ? "\"" + it + "\"" : null
            }.join(",") + "]"
        }
    }
}
